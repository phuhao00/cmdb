version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: cmdb-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: cmdb
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - cmdb-network

  consul:
    image: consul:1.15
    container_name: cmdb-consul
    restart: unless-stopped
    ports:
      - "8500:8500"  # UI and API
      - "8600:8600/udp"  # DNS
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    volumes:
      - consul_data:/consul/data
    networks:
      - cmdb-network

  cmdb-api:
    build: ./backend
    container_name: cmdb-api
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      MONGO_URI: mongodb://admin:password123@mongodb:27017/cmdb?authSource=admin
      CONSUL_ADDRESS: consul:8500
      PORT: 8081
      SERVICE_ADDRESS: cmdb-api
    depends_on:
      - mongodb
      - consul
    networks:
      - cmdb-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cmdb-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      BACKEND_HOST: cmdb-api
      BACKEND_PORT: 8081
    depends_on:
      - cmdb-api
    networks:
      - cmdb-network

volumes:
  mongodb_data:
  consul_data:

networks:
  cmdb-network:
    driver: bridge
